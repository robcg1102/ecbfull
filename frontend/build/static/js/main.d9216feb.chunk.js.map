{"version":3,"sources":["Services/ServiceCar.tsx","Components/MaitenanceItem.tsx/MaintenanceItem.tsx","Components/Home/Home.tsx","Components/Navbar/Navbar.tsx","assets/images/alternImage.jpg","Components/Detail/DetailMaintenance.tsx","Components/Form/FormMaintenance.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["API","getAllMaintenance","a","axios","get","createMaintenance","newMaintenance","post","deleteMaintenance","id","delete","getOneMaintenance","updateMaintenance","maintenanceCar","put","MaintenanceItem","maintenanceItem","loadItems","history","useHistory","className","maintenance","description","_id","clientName","onClick","push","swal","title","text","icon","buttons","cancel","confirm","dangerMode","then","willDelete","ServicesCar","Home","useState","dataMaintenance","setDataMaintenance","loadDataMaintenance","res","data","useEffect","scope","map","Navbar","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","to","DetailMaintenance","params","useParams","getMaintenance","setMaintenance","loadMaintenance","make","model","kilometers","image","src","alt","imageAltern","format","estimatedate","fromNow","updatedAt","FormMaintenance","initialDate","todayDate","Date","getTodayDate","setTodayDate","formatDate","date","d","month","getMonth","day","getDate","year","getFullYear","length","join","handleInputChange","e","target","name","value","getDataMaintenance","sendData","preventDefault","toast","success","onSubmit","placeholder","aria-describedby","onChange","min","checked","htmlFor","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9216feb.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { MaintenanceCar } from \"../Interfaces/MaintenanceCar\";\r\n\r\nconst API = \"https://testecb.herokuapp.com\";\r\n\r\nexport const getAllMaintenance = async () => {\r\n  return await axios.get<MaintenanceCar[]>(`${API}/services`);\r\n};\r\n\r\nexport const createMaintenance = async (newMaintenance: MaintenanceCar) => {\r\n  return await axios.post(`${API}/services`, newMaintenance);\r\n};\r\n\r\nexport const deleteMaintenance = async (id: string) => {\r\n  return await axios.delete<MaintenanceCar>(`${API}/services/${id}`);\r\n};\r\n\r\nexport const getOneMaintenance = async (id: string) => {\r\n  return await axios.get<MaintenanceCar>(`${API}/services/${id}`);\r\n};\r\n\r\nexport const updateMaintenance = async (id: string, maintenanceCar: MaintenanceCar) => {\r\n  return await axios.put<MaintenanceCar>(`${API}/services/${id}`, maintenanceCar);\r\n};","import { MaintenanceCar } from \"../../Interfaces/MaintenanceCar\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\n\r\nimport * as ServicesCar from \"../../Services/ServiceCar\";\r\n\r\ninterface Props {\r\n  maintenanceItem: MaintenanceCar;\r\n  loadItems: () => void;\r\n}\r\n\r\nconst MaintenanceItem = ({ maintenanceItem, loadItems }: Props) => {\r\n  const history = useHistory();\r\n\r\n  const handleDelete = (id: string) => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this data!\",\r\n      icon: \"warning\",\r\n      buttons: {\r\n        cancel: true,\r\n        confirm: true,\r\n      },\r\n      dangerMode: true,\r\n    }).then(async (willDelete) => {\r\n      if (willDelete) {\r\n        await ServicesCar.deleteMaintenance(id);\r\n        loadItems();\r\n        swal(\"Poof! Your file has been deleted!\", {\r\n          icon: \"success\",\r\n        });\r\n      } else {\r\n        swal(\"Your file is safe!\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <tr className={`${maintenanceItem.maintenance ? \"table-secondary text-primary\" : \"\"}`}>\r\n      <td className=\"text-center\">{maintenanceItem.description}</td>\r\n      <td className=\"text-center\">{maintenanceItem._id}</td>\r\n      <td className=\"text-center\">{maintenanceItem.clientName}</td>\r\n      <td className=\"text-center\">\r\n        <button\r\n          className=\"btn btn-info\"\r\n          onClick={() => history.push(`/detail/${maintenanceItem._id}`)}\r\n        >\r\n          More info\r\n        </button>\r\n      </td>\r\n      <td className=\"text-center\">\r\n        <button\r\n          className=\"btn btn-warning\"\r\n          onClick={() => history.push(`/edit/${maintenanceItem._id}`)}\r\n        >\r\n          Edit\r\n        </button>\r\n      </td>\r\n      <td className=\"text-center\">\r\n        <button\r\n          className=\"btn btn-danger\"\r\n          onClick={() =>\r\n            maintenanceItem._id && handleDelete(maintenanceItem._id)\r\n          }\r\n        >\r\n          X\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default MaintenanceItem;\r\n","import { useEffect, useState } from \"react\";\r\nimport { MaintenanceCar } from \"../../Interfaces/MaintenanceCar\";\r\nimport * as ServicesCar from \"../../Services/ServiceCar\";\r\nimport MaintenanceItem from \"../MaitenanceItem.tsx/MaintenanceItem\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  const history = useHistory();\r\n\r\n  const [dataMaintenance, setDataMaintenance] = useState<MaintenanceCar[]>([]);\r\n\r\n  const loadDataMaintenance = async () => {\r\n    const res = await ServicesCar.getAllMaintenance();\r\n    setDataMaintenance(res.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDataMaintenance();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container d-flex justify-content-around p-4\">\r\n        <h1>All maintenance car</h1>\r\n        <button\r\n          className=\"btn btn-success\"\r\n          onClick={() => history.push(\"/new\")}\r\n        >\r\n          New Maintenance\r\n        </button>\r\n      </div>\r\n      <div className=\"container d-flex justify-content-center\">\r\n        <table className=\"table table-dark col col-lg-2\">\r\n          <tbody>\r\n            <tr className=\"table-secondary text-primary\">\r\n              <th scope=\"row\">On maintenance</th>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">No maintenance</th>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <table className=\"table table-dark table-hover table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\" className=\"text-center\">\r\n              Description\r\n            </th>\r\n            <th scope=\"col\" className=\"text-center\">\r\n              ID\r\n            </th>\r\n            <th scope=\"col\" className=\"text-center\">\r\n              Client name\r\n            </th>\r\n            <th scope=\"col\" className=\"text-center\">\r\n              Info\r\n            </th>\r\n            <th scope=\"col\" className=\"text-center\">\r\n              Edit\r\n            </th>\r\n            <th scope=\"col\" className=\"text-center\">\r\n              Delete\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {dataMaintenance.map((maintenance) => {\r\n            return (\r\n              <MaintenanceItem\r\n                maintenanceItem={maintenance}\r\n                loadItems={loadDataMaintenance}\r\n              />\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <div className=\"container-fluid\">\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarNavAltMarkup\"\r\n          aria-controls=\"navbarNavAltMarkup\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n          <div className=\"navbar-nav\">\r\n            <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">\r\n              Home\r\n            </Link>\r\n            <Link className=\"nav-link\" to=\"/new\">\r\n              Create new maintenance\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/alternImage.02150728.jpg\";","import { useEffect, useState } from \"react\";\r\nimport * as ServicesCar from \"../../Services/ServiceCar\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { MaintenanceCar } from \"../../Interfaces/MaintenanceCar\";\r\nimport Moment from \"react-moment\";\r\nimport imageAltern from \"../../assets/images/alternImage.jpg\";\r\n\r\ninterface Params {\r\n  id: string;\r\n}\r\n\r\nconst DetailMaintenance = () => {\r\n  const params = useParams<Params>();\r\n\r\n  const [getMaintenance, setMaintenance] = useState<MaintenanceCar>();\r\n\r\n  const loadMaintenance = async (id: string) => {\r\n    const res = await ServicesCar.getOneMaintenance(id);\r\n    setMaintenance(res.data);\r\n    return res.data;\r\n  };\r\n  useEffect(() => {\r\n    loadMaintenance(params.id);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div className=\"card text-center\">\r\n        <div className=\"card-header\">\r\n          <h2 className=\"card-title\">OWNER: {getMaintenance?.clientName}</h2>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <h3 className=\"card-title\">MAKE: {getMaintenance?.make}</h3>\r\n          <h5 className=\"card-title\">MODEL: {getMaintenance?.model}</h5>\r\n          <p>KILOMETERS: {getMaintenance?.kilometers} km</p>\r\n          <p>\r\n            ON MAINTENANCE:{\" \"}\r\n            {getMaintenance?.maintenance ? (\r\n              <span className=\"border border-danger\">Yes</span>\r\n            ) : (\r\n              <span>No</span>\r\n            )}\r\n          </p>\r\n          {getMaintenance?.image ? (\r\n            <img src=\"...\" className=\"img-fluid\" alt=\"...\" />\r\n          ) : (\r\n            <img src={imageAltern} className=\"img-fluid\" alt=\"Alternimage\" />\r\n          )}\r\n\r\n          <hr />\r\n          <p className=\"card-text border border-warning\">\r\n            DESCRIPTION: <br /> {getMaintenance?.description}\r\n          </p>\r\n          <hr />\r\n          <p className=\"card-text border border-success\">\r\n            ESTIMATE DATE: <br />\r\n            <Moment format=\"YYYY/MM/DD\">{getMaintenance?.estimatedate}</Moment>\r\n          </p>\r\n          <hr />\r\n          <p className=\"card-text\">ID: {getMaintenance?._id}</p>\r\n          <Link to=\"/\" className=\"btn btn-primary\">\r\n            Home\r\n          </Link>\r\n        </div>\r\n        <div className=\"card-footer text-muted\">\r\n          LAST UPDATED: <Moment fromNow>{getMaintenance?.updatedAt}</Moment>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailMaintenance;\r\n","import { useHistory, useParams } from \"react-router-dom\";\r\nimport { useEffect, useState, ChangeEvent, FormEvent } from \"react\";\r\n\r\nimport { MaintenanceCar } from \"../../Interfaces/MaintenanceCar\";\r\nimport * as ServicesCar from \"../../Services/ServiceCar\";\r\nimport { toast } from \"react-toastify\";\r\nimport swal from \"sweetalert\";\r\n\r\ntype inputChange = ChangeEvent<HTMLInputElement | HTMLTextAreaElement>;\r\n\r\ninterface Params {\r\n  id: string;\r\n}\r\n\r\nconst FormMaintenance = () => {\r\n  const params = useParams<Params>();\r\n  const history = useHistory();\r\n\r\n  const initialState = {\r\n    description: \"\",\r\n    make: \"\",\r\n    model: \"\",\r\n    kilometers: 0,\r\n    maintenance: false,\r\n    clientName: \"\",\r\n    estimatedate: \"\",\r\n  };\r\n\r\n  const initialDate = {\r\n    todayDate: Date(),\r\n  };\r\n\r\n  const [getMaintenance, setMaintenance] = useState<MaintenanceCar>(\r\n    initialState\r\n  );\r\n  const [getTodayDate, setTodayDate] = useState(initialDate);\r\n\r\n  const formatDate = (date: string) => {\r\n    var d = new Date(date),\r\n      month = \"\" + (d.getMonth() + 1),\r\n      day = \"\" + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n    if (month.length < 2) month = \"0\" + month;\r\n    if (day.length < 2) day = \"0\" + day;\r\n\r\n    return [year, month, day].join(\"-\");\r\n  };\r\n\r\n  const handleInputChange = (e: inputChange) => {\r\n    setMaintenance({ ...getMaintenance, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleCheck = (e: inputChange) => {\r\n    setMaintenance({\r\n      ...getMaintenance,\r\n      maintenance: !getMaintenance.maintenance,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTodayDate({\r\n      todayDate: formatDate(getTodayDate.todayDate),\r\n    });\r\n    setMaintenance({\r\n      ...getMaintenance,\r\n      estimatedate: getTodayDate.todayDate,\r\n    });\r\n\r\n    if (params.id) {\r\n      getDataMaintenance(params.id);\r\n    }\r\n  }, []);\r\n\r\n  const getDataMaintenance = async (id: string) => {\r\n    const res = await ServicesCar.getOneMaintenance(id);\r\n    const {\r\n      description,\r\n      make,\r\n      model,\r\n      kilometers,\r\n      maintenance,\r\n      clientName,\r\n      estimatedate,\r\n    } = res.data;\r\n    setMaintenance({\r\n      description,\r\n      make,\r\n      model,\r\n      kilometers,\r\n      maintenance,\r\n      clientName,\r\n      estimatedate,\r\n    });\r\n  };\r\n\r\n  const sendData = async (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (params.id) {\r\n      swal({\r\n        text: \"Maintenance updated!\",\r\n        icon: \"success\",\r\n      });\r\n      await ServicesCar.updateMaintenance(params.id, getMaintenance);\r\n      toast.success(\"Maintenance updated\");\r\n    } else {\r\n      swal({\r\n        text: \"Maintenance created!\",\r\n        icon: \"success\",\r\n      });\r\n      await ServicesCar.createMaintenance(getMaintenance);\r\n      toast.success(\"New Maintenance created\");\r\n    }\r\n    \r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {params.id ? <h2>Edit</h2> : <h2>Create new</h2>}\r\n      <form onSubmit={sendData}>\r\n        <div className=\"input-group mb-3\">\r\n          <span className=\"input-group-text\" id=\"basic-addon1\">\r\n            Client name\r\n          </span>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Client name\"\r\n            aria-label=\"Client name\"\r\n            aria-describedby=\"basic-addon1\"\r\n            value={getMaintenance.clientName}\r\n            onChange={handleInputChange}\r\n            name=\"clientName\"\r\n          />\r\n        </div>\r\n        <div className=\"input-group mb-3\">\r\n          <span className=\"input-group-text\" id=\"basic-addon1\">\r\n            Make\r\n          </span>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Make\"\r\n            aria-label=\"Make\"\r\n            aria-describedby=\"basic-addon1\"\r\n            value={getMaintenance.make}\r\n            onChange={handleInputChange}\r\n            name=\"make\"\r\n          />\r\n        </div>\r\n        <div className=\"input-group mb-3\">\r\n          <span className=\"input-group-text\" id=\"basic-addon1\">\r\n            Model\r\n          </span>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Model\"\r\n            aria-label=\"Model\"\r\n            aria-describedby=\"basic-addon1\"\r\n            value={getMaintenance.model}\r\n            onChange={handleInputChange}\r\n            name=\"model\"\r\n          />\r\n        </div>\r\n        <div className=\"input-group mb-3\">\r\n          <span className=\"input-group-text\">Description</span>\r\n          <textarea\r\n            value={getMaintenance.description}\r\n            className=\"form-control\"\r\n            aria-label=\"With textarea\"\r\n            onChange={handleInputChange}\r\n            name=\"description\"\r\n          />\r\n        </div>\r\n        <div className=\"input-group mb-3\">\r\n          <span className=\"input-group-text\" id=\"basic-addon1\">\r\n            Kilometers\r\n          </span>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            aria-label=\"Model\"\r\n            aria-describedby=\"basic-addon1\"\r\n            value={getMaintenance.kilometers}\r\n            onChange={handleInputChange}\r\n            name=\"kilometers\"\r\n          />\r\n        </div>\r\n        <div className=\"input-group mb-3\">\r\n          <span className=\"input-group-text\" id=\"basic-addon1\">\r\n            Estimate Date\r\n          </span>\r\n          <input\r\n            id=\"date\"\r\n            type=\"date\"\r\n            onChange={handleInputChange}\r\n            name=\"estimatedate\"\r\n            value={`${getMaintenance.estimatedate}`}\r\n            min={`${getTodayDate.todayDate}`}\r\n          />\r\n        </div>\r\n        <div className=\"input-group mb-3\">\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"flexCheckDefault\"\r\n              name=\"maintenance\"\r\n              onChange={handleCheck}\r\n              checked={getMaintenance.maintenance}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\r\n              On Maintenance\r\n            </label>\r\n          </div>\r\n        </div>\r\n        {params.id ? (\r\n          <button className=\"btn btn-success\">Update Data</button>\r\n        ) : (\r\n          <button className=\"btn btn-success\">Create</button>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormMaintenance;\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./Components/Home/Home\";\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport DetailMaintenance from \"./Components/Detail/DetailMaintenance\";\nimport FormMaintenance from \"./Components/Form/FormMaintenance\";\n\nimport { ToastContainer } from \"react-toastify\";\n\nfunction App() {\n  return (\n    <div className=\"App mb-4\">\n      <Navbar />\n      <div className=\"container p-3\">\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/detail/:id\" component={DetailMaintenance} />\n          <Route exact path=\"/new\" component={FormMaintenance} />\n          <Route exact path=\"/edit/:id\" component={FormMaintenance} />\n        </Switch>\n        <ToastContainer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"bootswatch/dist/pulse/bootstrap.min.css\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}